{"ast":null,"code":"// import React, { useState, useEffect, useReducer } from 'react';\n\n// import Card from '../UI/Card/Card';\n// import classes from './Login.module.css';\n// import Button from '../UI/Button/Button';\n\n// const emailReducer = (state, action)=>{\n//   if(action.type === 'USER_INPUT'){\n//     return { value: state ,isValid : action.val.includes('@') };\n//   }\n//   if(action.type === 'INPUT_BLUR'){\n//     return { value: state.value ,isValid : state.value.includes('@') };\n//   }\n//   return { value: '',isValid : false}\n// };\n\n// const passwordReducer = (state, action)=>{\n//   if(action.type === 'USER_INPUT'){\n//     return { value: action.val ,isValid : action.val.trim().length>6 };\n//   }\n//   if(action.type === 'INPUT_BLUR'){\n//     return { value: state.value ,isValid : state.value.trim().length>6 };\n//   }\n//   return { value: '',isValid : false}\n// }\n\n// const Login = (props) => {\n//   // const [enteredEmail, setEnteredEmail] = useState('');\n//   // const [emailIsValid, setEmailIsValid] = useState();\n//   // const [enteredPassword, setEnteredPassword] = useState('');\n//   // const [passwordIsValid, setPasswordIsValid] = useState();\n//   const [formIsValid, setFormIsValid] = useState(false);\n\n//   const [emailState, dispatchEmail] = useReducer(emailReducer,{\n//           value: '',\n//           isValid : null,\n//   });\n//   const [passwordState, dispatchPassword] = useReducer(passwordReducer,{\n//     value: '',\n//     isValid : null,\n// });;\n\n//   useEffect(() =>{\n//     console.log('Effect Running');\n//   },[]);\n\n//   // useEffect(() =>{\n//   //   const identifier = setTimeout(() => {\n//   //     setFormIsValid(\n//   //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n//   //     );\n//   //   },500);\n//   //   return () =>{                //Returning CleanUp function for SideEffect function\n//   //     clearTimeout(identifier);\n//   //   }; \n//   // },[ enteredEmail, enteredPassword])\n\n//   const emailChangeHandler = (event) => {\n//     dispatchEmail({type: 'USER_INPUT', val : event.target.value});\n\n//   };\n\n//   setFormIsValid(\n//     emailState.isValid && passwordState.isValid\n//   );\n// };\n\n//   const passwordChangeHandler = (event) => {\n//     // setEnteredPassword(event.target.value);\n//     dispatchPassword({type: 'USER_INPUT', val: event.target.value});\n\n//   const validateEmailHandler = () => {\n//     // setEmailIsValid(emailState.isValid);\n//     dispatchEmail({type: 'INPUT_BLUR'});\n//   };\n\n//   const validatePasswordHandler = () => {\n//     // setPasswordIsValid(enteredPassword.trim().length > 6);\n//     dispatchPassword({type: 'INPUT_BLUR'});\n//   };\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     props.onLogin(emailState.value, passwordState.value);\n//   };\n\n//   return (\n//     <Card className={classes.login}>\n//       <form onSubmit={submitHandler}>\n//         <div\n//           className={`${classes.control} ${\n//             emailState.isValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"email\">E-Mail</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={emailState.value}\n//             onChange={emailChangeHandler}\n//             onBlur={validateEmailHandler}\n//           />\n//         </div>\n//         <div\n//           className={`${classes.control} ${\n//             passwordState.isValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={passwordState.value}\n//             onChange={passwordChangeHandler}\n//             onBlur={validatePasswordHandler}\n//           />\n//         </div>\n//         <div className={classes.actions}>\n//           <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n//             Login\n//           </Button>\n//         </div>\n//       </form>\n//     </Card>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["C:/Project/Frontend Project/Login page (Dummy)/src/components/Login/Login.js"],"sourcesContent":["// import React, { useState, useEffect, useReducer } from 'react';\n\n// import Card from '../UI/Card/Card';\n// import classes from './Login.module.css';\n// import Button from '../UI/Button/Button';\n\n// const emailReducer = (state, action)=>{\n//   if(action.type === 'USER_INPUT'){\n//     return { value: state ,isValid : action.val.includes('@') };\n//   }\n//   if(action.type === 'INPUT_BLUR'){\n//     return { value: state.value ,isValid : state.value.includes('@') };\n//   }\n//   return { value: '',isValid : false}\n// };\n\n// const passwordReducer = (state, action)=>{\n//   if(action.type === 'USER_INPUT'){\n//     return { value: action.val ,isValid : action.val.trim().length>6 };\n//   }\n//   if(action.type === 'INPUT_BLUR'){\n//     return { value: state.value ,isValid : state.value.trim().length>6 };\n//   }\n//   return { value: '',isValid : false}\n// }\n\n// const Login = (props) => {\n//   // const [enteredEmail, setEnteredEmail] = useState('');\n//   // const [emailIsValid, setEmailIsValid] = useState();\n//   // const [enteredPassword, setEnteredPassword] = useState('');\n//   // const [passwordIsValid, setPasswordIsValid] = useState();\n//   const [formIsValid, setFormIsValid] = useState(false);\n\n//   const [emailState, dispatchEmail] = useReducer(emailReducer,{\n//           value: '',\n//           isValid : null,\n//   });\n//   const [passwordState, dispatchPassword] = useReducer(passwordReducer,{\n//     value: '',\n//     isValid : null,\n// });;\n\n//   useEffect(() =>{\n//     console.log('Effect Running');\n//   },[]);\n\n//   // useEffect(() =>{\n//   //   const identifier = setTimeout(() => {\n//   //     setFormIsValid(\n//   //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n//   //     );\n//   //   },500);\n//   //   return () =>{                //Returning CleanUp function for SideEffect function\n//   //     clearTimeout(identifier);\n//   //   }; \n//   // },[ enteredEmail, enteredPassword])\n\n//   const emailChangeHandler = (event) => {\n//     dispatchEmail({type: 'USER_INPUT', val : event.target.value});\n\n//   };\n\n//   setFormIsValid(\n//     emailState.isValid && passwordState.isValid\n//   );\n// };\n\n//   const passwordChangeHandler = (event) => {\n//     // setEnteredPassword(event.target.value);\n//     dispatchPassword({type: 'USER_INPUT', val: event.target.value});\n\n\n//   const validateEmailHandler = () => {\n//     // setEmailIsValid(emailState.isValid);\n//     dispatchEmail({type: 'INPUT_BLUR'});\n//   };\n\n//   const validatePasswordHandler = () => {\n//     // setPasswordIsValid(enteredPassword.trim().length > 6);\n//     dispatchPassword({type: 'INPUT_BLUR'});\n//   };\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     props.onLogin(emailState.value, passwordState.value);\n//   };\n\n//   return (\n//     <Card className={classes.login}>\n//       <form onSubmit={submitHandler}>\n//         <div\n//           className={`${classes.control} ${\n//             emailState.isValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"email\">E-Mail</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={emailState.value}\n//             onChange={emailChangeHandler}\n//             onBlur={validateEmailHandler}\n//           />\n//         </div>\n//         <div\n//           className={`${classes.control} ${\n//             passwordState.isValid === false ? classes.invalid : ''\n//           }`}\n//         >\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={passwordState.value}\n//             onChange={passwordChangeHandler}\n//             onBlur={validatePasswordHandler}\n//           />\n//         </div>\n//         <div className={classes.actions}>\n//           <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n//             Login\n//           </Button>\n//         </div>\n//       </form>\n//     </Card>\n//   );\n// };\n\n// export default Login;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}